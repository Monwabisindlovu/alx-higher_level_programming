================================= How to Use 101-lazy_matrix_mul.py
This module defines a matrix multiplication function lazy_matrix_mul(m_a, m_b).

Usage
lazy_matrix_mul(...) returns a new matrix representing the multiplication of m_a by m_b.

::

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> m_a = [
... [1, 2],
... [3, 4]
... ]
>>> m_b = [
... [1, 2],
... [3, 4]
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[ 7 10]
 [15 22]]
Copy
The matrices must be lists of lists of integers or floats. Otherwise, a TypeError is raised.

::

>>> m_a = [
... [1, 2.456],
... [2, 3.27386]
... ]
>>> m_b = [
... [1, 2.456],
... [2, "3"]
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in lazy_matrix_mul
  ValueError: data type must provide an itemsize
Copy
The matrices must have compatible dimensions for multiplication. Otherwise, a ValueError is raised.

::

>>> m_a = [
... [1, 2],
... [3, 4, 5]
... ]
>>> m_b = [
... [1, 2],
... [3, 4]
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in lazy_matrix_mul
  ValueError: setting an array element with a sequence.
Copy
::

>>> m_a = [
... [1, 2],
... [3, 4]
... ]
>>> m_b = [
... [1, 2],
... [3, 4, 5]
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in lazy_matrix_mul
  ValueError: setting an array element with a sequence.
Copy
::

>>> m_a = [
... [1, 2],
... [3, 4, 5]
... ]
>>> m_b = m_a
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in lazy_matrix_mul
  ValueError: setting an array element with a sequence.
